{"version":3,"file":"qunit-current-url-dist.js","sources":["qunit-current-url.js"],"sourcesContent":["/* eslint-disable no-undef */\n\nfunction extraUrlInfo(urlString) {\n  const [baseUrl, queryParamsString = ''] = urlString.split('?');\n  const queryParamsPairs = queryParamsString.split('&');\n  const queryParameters = {};\n  queryParamsPairs.forEach((pair) => {\n    const [key, value] = pair.split('=');\n    // If there are no QP's we don't want to push \"\": undefined\n    if (key) {\n      queryParameters[key] = value;\n    }\n  });\n  return {\n    baseUrl,\n    queryParameters,\n  };\n}\n\nfunction objectToString(object) {\n  const keyValueStrings = Object.keys(object)\n    .sort(function (a, b) {\n        const left = a.toLowerCase();\n        const right = b.toLowerCase();\n        if (left < right) { \n            return -1;\n        }\n        if (left > right) { \n            return 1; \n        }\n        return 0;\n    })\n    .map((key) => `${key}=${object[key]}`)\n    .join('&');\n  return `?${keyValueStrings}`;\n}\n\nQUnit.assert.currentUrl = function(expectedUrl, expectedQueryParams) {\n  const { currentURL }  = require('@ember/test-helpers');\n  const currentUrlString = currentURL();\n  const currentUrlInfo = extraUrlInfo(currentUrlString);\n  if (expectedQueryParams) {\n    const expectedUrlInfo = extraUrlInfo(expectedUrl);\n    QUnit.assert.equal(\n      currentUrlInfo.baseUrl,\n      expectedUrlInfo.baseUrl,\n      'Expected base URL to be the same'\n    );\n    QUnit.assert.deepEqual(\n      currentUrlInfo.queryParameters,\n      expectedQueryParams,\n      'Expected query parameters to be the same'\n    );\n  } else {\n    const expectedUrlInfo = extraUrlInfo(expectedUrl);\n    QUnit.assert.equal(\n      currentUrlInfo.baseUrl,\n      expectedUrlInfo.baseUrl,\n      'Expected base URL to be the same'\n    );\n    QUnit.assert.equal(\n      objectToString(currentUrlInfo.queryParameters),\n      objectToString(expectedUrlInfo.queryParameters),\n      'Expected query parameters to be the same'\n    );\n  }\n};"],"names":["extraUrlInfo","urlString","split","baseUrl","queryParamsString","queryParamsPairs","queryParameters","forEach","pair","key","value","objectToString","object","keyValueStrings","Object","keys","sort","a","b","left","toLowerCase","right","map","join","QUnit","assert","currentUrl","expectedUrl","expectedQueryParams","require","currentURL","currentUrlString","currentUrlInfo","expectedUrlInfo","equal","deepEqual"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAAA;EAEA,SAASA,YAAT,CAAsBC,SAAtB,EAAiC;EAAA,yBACWA,SAAS,CAACC,KAAV,CAAgB,GAAhB,CADX;EAAA;EAAA,MACxBC,OADwB;EAAA;EAAA,MACfC,iBADe,mCACK,EADL;;EAE/B,MAAMC,gBAAgB,GAAGD,iBAAiB,CAACF,KAAlB,CAAwB,GAAxB,CAAzB;EACA,MAAMI,eAAe,GAAG,EAAxB;EACAD,EAAAA,gBAAgB,CAACE,OAAjB,CAAyB,UAACC,IAAD,EAAU;EAAA,sBACZA,IAAI,CAACN,KAAL,CAAW,GAAX,CADY;EAAA;EAAA,QAC1BO,GAD0B;EAAA,QACrBC,KADqB;;;EAGjC,QAAID,GAAJ,EAAS;EACPH,MAAAA,eAAe,CAACG,GAAD,CAAf,GAAuBC,KAAvB;EACD;EACF,GAND;EAOA,SAAO;EACLP,IAAAA,OAAO,EAAPA,OADK;EAELG,IAAAA,eAAe,EAAfA;EAFK,GAAP;EAID;;EAED,SAASK,cAAT,CAAwBC,MAAxB,EAAgC;EAC9B,MAAMC,eAAe,GAAGC,MAAM,CAACC,IAAP,CAAYH,MAAZ,EACrBI,IADqB,CAChB,UAAUC,CAAV,EAAaC,CAAb,EAAgB;EAClB,QAAMC,IAAI,GAAGF,CAAC,CAACG,WAAF,EAAb;EACA,QAAMC,KAAK,GAAGH,CAAC,CAACE,WAAF,EAAd;;EACA,QAAID,IAAI,GAAGE,KAAX,EAAkB;EACd,aAAO,CAAC,CAAR;EACH;;EACD,QAAIF,IAAI,GAAGE,KAAX,EAAkB;EACd,aAAO,CAAP;EACH;;EACD,WAAO,CAAP;EACH,GAXqB,EAYrBC,GAZqB,CAYjB,UAACb,GAAD;EAAA,qBAAYA,GAAZ,cAAmBG,MAAM,CAACH,GAAD,CAAzB;EAAA,GAZiB,EAarBc,IAbqB,CAahB,GAbgB,CAAxB;EAcA,oBAAWV,eAAX;EACD;;EAEDW,KAAK,CAACC,MAAN,CAAaC,UAAb,GAA0B,UAASC,WAAT,EAAsBC,mBAAtB,EAA2C;EAAA,iBAC3CC,OAAO,CAAC,qBAAD,CADoC;EAAA,MAC3DC,UAD2D,YAC3DA,UAD2D;;EAEnE,MAAMC,gBAAgB,GAAGD,UAAU,EAAnC;EACA,MAAME,cAAc,GAAGhC,YAAY,CAAC+B,gBAAD,CAAnC;;EACA,MAAIH,mBAAJ,EAAyB;EACvB,QAAMK,eAAe,GAAGjC,YAAY,CAAC2B,WAAD,CAApC;EACAH,IAAAA,KAAK,CAACC,MAAN,CAAaS,KAAb,CACEF,cAAc,CAAC7B,OADjB,EAEE8B,eAAe,CAAC9B,OAFlB,EAGE,kCAHF;EAKAqB,IAAAA,KAAK,CAACC,MAAN,CAAaU,SAAb,CACEH,cAAc,CAAC1B,eADjB,EAEEsB,mBAFF,EAGE,0CAHF;EAKD,GAZD,MAYO;EACL,QAAMK,gBAAe,GAAGjC,YAAY,CAAC2B,WAAD,CAApC;;EACAH,IAAAA,KAAK,CAACC,MAAN,CAAaS,KAAb,CACEF,cAAc,CAAC7B,OADjB,EAEE8B,gBAAe,CAAC9B,OAFlB,EAGE,kCAHF;EAKAqB,IAAAA,KAAK,CAACC,MAAN,CAAaS,KAAb,CACEvB,cAAc,CAACqB,cAAc,CAAC1B,eAAhB,CADhB,EAEEK,cAAc,CAACsB,gBAAe,CAAC3B,eAAjB,CAFhB,EAGE,0CAHF;EAKD;EACF,CA7BD;;;;"}